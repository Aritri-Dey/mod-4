<?php

/**
 * @file 
 * This file demonstrates how to use hook functions.
 */

use Drupal\Core\Url;
use Drupal\mymodule\Controller\MyController;
use Drupal\node\NodeInterface;

/**
* Implements hook_cron().
*/
function mymodule_cron() {
  \Drupal::messenger()->addMessage(t("Hello from mymodule cron hook!!"));
}

/**
* Implements hook_form_alter().
*/
function mymodule_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  \Drupal::messenger()->addMessage(t("Form id of this form is @id:",['@id' => $form_id]));
  if ($form_id == 'node_article_edit_form') {
    $form['actions']['submit']['#value'] = t("Save this awesome article!");
  }

  if (\Drupal::currentUser()->hasPermission('static permission 2')) {
    \Drupal::messenger()->addMessage(t("You have static permission 2!"));
  }
  else {
    \Drupal::messenger()->addMessage(t("You  DO NOT have static permission 2!"));
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function mymodule_form_user_login_form_alter(&$form) {
  $form['#submit'][] = 'mymodule_user_login_submit';
}

/**
 * Form submission handler for user_login_form().
 *
 * Redirects the user to the /custom-welcome-page after logging in.
 */
function mymodule_user_login_submit(&$form, \Drupal\Core\Form\FormStateInterface $form_state) {
  $url = Url::fromRoute('mymodule.my_page');
  $form_state->setRedirectUrl($url);
}

// function mymodule_preprocess_page(&$variable) {
//   dump($variable);
//   dump('hello');
//   dump('bye');
// }

/**
 * Implements hook_mymodule_count_increment()
 */
function check_mymodule_count_increment($current_count, NodeInterface $node) {
  if ($current_count == 1) {
    \Drupal::messenger()->addMessage(t("This is the first time you have viewed the node %title", ['%title' => $node->label()]));
  }
}

/**
 * Implements hook_ENTITY_TYPE_view.
 */
function mymodule_node__view(array &$build, \Drupal\Core\Entity\EntityInterface $entity, \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display, $view_mode) {

  // Counts the number of times the current node has been viewed in this session.
  $session = \Drupal::request()->getSession();
  $current_count = $session->get('hooks_example.view_counts', array());
  if (!isset($current_count[$entity->id()])) {
    $current_count[$entity->id()] = 1;
  }
  else {
    $current_count[$entity->id()]++;
  }
  $session->set('hooks_example.view_counts', $current_count);
  // Invoke a hook to alert other modules that the count was updated.
  $module_handler = \Drupal::moduleHandler();

  // Invoking hook_mymodule_count_increment() and passing all implementations the current 
  // view count for the node, and the node object itself.
  $module_handler->invokeAll('mymodule_count_increment', array($current_count));

  // Display the current number of pages the user has viewed along with the node's content.
  $build['view_count'] = array(
    '#markup' => '<p>' . t('You have viewed this node  2 total number of times in this session.', array('@total' => $current_count[$entity->id()])) . '</p>',
    '#cache' => array(
      'max-age' => 0,
    ),
  );
}
